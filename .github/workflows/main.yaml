# GitHub Actions workflow for deploying a Node.js/Express application to Google Cloud Platform (GCP) using a Docker-compose.

name: Deploy to GCP

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: "note-sharing-390521"
  REGION: "asia-south1"
  TAG: ${{ github.sha }}

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose push

      - name: Authenticate with GCP using a service account
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.SECRET_KEY }}
          export_default_credentials: true

      - name: Push Docker Images to Artifact Registry
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev
          docker push ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/application:${{ env.TAG }}
          docker push ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/mongodb:${{ env.TAG }}

      - name: Echo Image Names
        run: |
          echo "Pushed Docker image ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/application:${{ env.TAG }}"
          echo "Pushed Docker image ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/mongodb:${{ env.TAG }}"

  continuous-deployment:
    needs: build-and-push-image
    runs-on: self-hosted
    steps:
      - name: Pull Latest Docker Images from Artifact Registry
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev
          docker-compose pull

      - name: Stop and Remove Previous Containers
        run: |
          docker-compose down --volumes

      - name: Run Docker Containers
        run: |
          docker-compose up -d

      - name: Clean Previous Images and Containers
        run: |
          docker image prune -f
          docker container prune -f
